{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////var/www/application/custom/plugins/FroshExportSw6/src/Resources/app/administration/src/module/frosh-export/page/frosh-export-list/frosh-export-list.html.twig","webpack:////var/www/application/custom/plugins/FroshExportSw6/src/Resources/app/administration/src/module/frosh-export/page/frosh-export-create/frosh-export-create.html.twig","webpack:////var/www/application/custom/plugins/FroshExportSw6/src/Resources/app/administration/src/module/frosh-export/page/frosh-export-detail/frosh-export-detail.html.twig","webpack:////var/www/application/custom/plugins/FroshExportSw6/src/Resources/app/administration/src/module/frosh-export/page/frosh-export-create/index.js","webpack:////var/www/application/custom/plugins/FroshExportSw6/src/Resources/app/administration/src/module/frosh-export/page/frosh-export-list/index.js","webpack:////var/www/application/custom/plugins/FroshExportSw6/src/Resources/app/administration/src/module/frosh-export/page/frosh-export-detail/index.js","webpack:////var/www/application/custom/plugins/FroshExportSw6/src/Resources/app/administration/src/module/frosh-export/index.js","webpack:////var/www/application/custom/plugins/FroshExportSw6/src/Resources/app/administration/src/service/api/frosh.export.service.js","webpack:////var/www/application/custom/plugins/FroshExportSw6/src/Resources/app/administration/src/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Shopware","Component","extend","template","methods","getEntity","this","entity","froshExportRepository","Context","api","onClickSave","isLoading","save","then","$router","push","params","id","catch","exception","createNotificationError","title","$tc","message","Mixin","Criteria","Data","register","inject","mixins","getByName","data","sortBy","defaultSortBy","sortDirection","naturalSorting","entities","total","metaInfo","$createTitle","computed","repositoryFactory","columns","dataIndex","label","routerLink","inlineEdit","allowResize","primary","defaultCriteria","criteria","page","limit","setTerm","term","updateTotal","getList","search","items","processSuccess","lastExecute","console","log","format","date","created","$route","onCancel","saveFinish","triggerExport","froshExportService","Module","type","description","color","icon","routes","index","component","path","meta","privilege","detail","parentPath","props","default","route","froshExport","navigation","parent","position","ApiService","Classes","FroshExportService","httpClient","loginService","apiEndpoint","additionalParams","additionalHeaders","headers","getBasicHeaders","response","handleResponse","Application","addServiceProvider","initContainer","getContainer","Service"],"mappings":"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","file":"static/js/frosh-exporter.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/bundles/froshexporter/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"wn0u\");\n","module.exports = \"{% block frosh_export_list %}\\n    <sw-page class=\\\"frosh-export-list\\\">\\n\\n        {% block sw_product_list_search_bar %}\\n            <template #search-bar>\\n                <sw-search-bar initialSearchType=\\\"frosh_export\\\"\\n                               :initialSearch=\\\"term\\\"\\n                               @search=\\\"onSearch\\\">\\n                </sw-search-bar>\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_product_list_smart_bar_header %}\\n            <template #smart-bar-header>\\n                {% block sw_product_list_smart_bar_header_title %}\\n                    <h2>\\n                        {% block sw_product_list_smart_bar_header_title_text %}\\n                            {{ $tc('frosh-export.general.mainMenuItemGeneral') }}\\n                        {% endblock %}\\n\\n                        {% block sw_product_list_smart_bar_header_amount %}\\n                            <span v-if=\\\"!isLoading\\\" class=\\\"sw-page__smart-bar-amount\\\">\\n                                ({{ total }})\\n                            </span>\\n                        {% endblock %}\\n                    </h2>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block frosh_export_list_smart_bar_actions %}\\n            <template #smart-bar-actions>\\n                {% block frosh_export_list_smart_bar_actions_add %}\\n                    <sw-button :routerLink=\\\"{ name: 'frosh.export.create' }\\\" variant=\\\"primary\\\">\\n                        {{ $tc('frosh-export.list.create') }}\\n                    </sw-button>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        <template #content>\\n            {% block frosh_export_list_content %}\\n                <div class=\\\"frosh-export-list__content\\\">\\n\\n                    <sw-entity-listing\\n                        v-if=\\\"entities\\\"\\n                        :items=\\\"entities\\\"\\n                        :repository=\\\"froshExportRepository\\\"\\n                        :showSelection=\\\"false\\\"\\n                        :columns=\\\"columns\\\"\\n                        detailRoute=\\\"frosh.export.detail\\\"\\n                    >\\n                    </sw-entity-listing>\\n                </div>\\n            {% endblock %}\\n        </template>\\n    </sw-page>\\n{% endblock %}\\n\";","module.exports = \"{% block frosh_export_detail_content_trigger_button %}\\n{% endblock %}\\n\";","module.exports = \"{% block frosh_export_detail %}\\n    <sw-page class=\\\"frosh-export-detail\\\">\\n\\n        {% block frosh_export_detail_actions %}\\n            <template slot=\\\"smart-bar-actions\\\">\\n                {% block frosh_export_detail_actions_abort %}\\n                    <sw-button\\n                            :disabled=\\\"isLoading\\\"\\n                            @click=\\\"onCancel\\\">\\n                        {{ $tc('frosh-export.detail.cancel') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block frosh_export_detail_actions_save %}\\n                    <sw-button-process\\n                            class=\\\"sw-product-detail__save-action\\\"\\n                            :isLoading=\\\"isLoading\\\"\\n                            :processSuccess=\\\"processSuccess\\\"\\n                            :disabled=\\\"isLoading\\\"\\n                            variant=\\\"primary\\\"\\n                            @process-finish=\\\"saveFinish\\\"\\n                            @click=\\\"onClickSave\\\"\\n                    >\\n                        {{ $tc('frosh-export.detail.save') }}\\n                    </sw-button-process>\\n                {% endblock %}\\n\\n            </template>\\n        {% endblock %}\\n\\n        <template slot=\\\"content\\\">\\n            <sw-card-view>\\n                {% block frosh_export_detail_content %}\\n\\n                    <sw-card :title=\\\"$tc('frosh-export.detail.baseLabel')\\\"\\n                             v-if=\\\"entity\\\">\\n\\n                        <sw-text-field\\n                                :label=\\\"$tc('frosh-export.detail.lastExecute')\\\"\\n                                :value=\\\"lastExecute\\\"\\n                                :disabled=\\\"true\\\">\\n                        </sw-text-field>\\n                        <sw-text-field\\n                                v-model=\\\"entity.name\\\"\\n                                :label=\\\"$tc('frosh-export.detail.name')\\\"\\n                                value=\\\"entity.name\\\"\\n                                :required=\\\"true\\\">\\n                        </sw-text-field>\\n                        <sw-text-field\\n                                v-model=\\\"entity.entity\\\"\\n                                :label=\\\"$tc('frosh-export.detail.entity')\\\"\\n                                value=\\\"entity.entity\\\"\\n                                :required=\\\"true\\\">\\n                        </sw-text-field>\\n\\n                        <sw-multi-tag-select\\n                                v-model=\\\"entity.fields\\\"\\n                                :label=\\\"$tc('frosh-export.detail.entity')\\\"\\n                                :placeholder=\\\"$tc('frosh-export.detail.fields')\\\"\\n                        >\\n                            <template #message-add-data>\\n                                <span>{{ $tc('frosh-export.detail.addField') }}</span>\\n                            </template>\\n                            <template #message-enter-valid-data>\\n                                <span>{{ $tc('frosh-export.detail.enterField') }}</span>\\n                            </template>\\n                        </sw-multi-tag-select>\\n\\n                        <sw-entity-single-select\\n                                v-model=\\\"entity.productStreamId\\\"\\n                                entity=\\\"product_stream\\\"\\n                                :label=\\\"$tc('frosh-export.detail.productStream')\\\"\\n                                value=\\\"entity.productStreamId\\\"\\n                                :disabled=\\\"entity.entity != 'product'\\\">\\n                        </sw-entity-single-select>\\n\\n                        {% block frosh_export_detail_content_trigger_button %}\\n                            <sw-button @click=\\\"triggerExport\\\">\\n                                {{ $tc('frosh-export.detail.triggerButton') }}\\n                            </sw-button>\\n                        {% endblock %}\\n                    </sw-card>\\n                {% endblock %}\\n            </sw-card-view>\\n        </template>\\n    </sw-page>\\n{% endblock %}\\n\";","import template from './frosh-export-create.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.extend('frosh-export-create', 'frosh-export-detail', {\n    template,\n\n    methods: {\n        getEntity() {\n            this.entity = this.froshExportRepository.create(Shopware.Context.api);\n        },\n\n        onClickSave() {\n            this.isLoading = true;\n\n            this.froshExportRepository\n                .save(this.entity, Shopware.Context.api)\n                .then(() => {\n                    this.isLoading = false;\n                    this.$router.push({name: 'frosh.export.detail', params: {id: this.entity.id}});\n                }).catch((exception) => {\n                this.isLoading = false;\n\n                this.createNotificationError({\n                    title: this.$tc('frosh-export.detail.errorTitle'),\n                    message: exception\n                });\n            });\n        }\n    }\n});\n","import template from './frosh-export-list.html.twig';\n\nconst {Component, Mixin} = Shopware;\nconst {Criteria} = Shopware.Data;\n\nComponent.register('frosh-export-list', {\n    template,\n\n    inject: [\n        'repositoryFactory'\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('listing'),\n        Mixin.getByName('placeholder')\n    ],\n\n    data() {\n        return {\n            sortBy: 'name',\n            defaultSortBy: 'name',\n            sortDirection: 'DESC',\n            naturalSorting: true,\n            entities: null,\n            total: 0,\n            isLoading: false,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle()\n        };\n    },\n\n    computed: {\n        froshExportRepository() {\n            return this.repositoryFactory.create('frosh_export');\n        },\n\n        columns() {\n            return [\n                {\n                    property: 'name',\n                    dataIndex: 'name',\n                    label: this.$tc('frosh-export.detail.name'),\n                    routerLink: 'frosh.export.detail',\n                    inlineEdit: 'string',\n                    allowResize: true,\n                    primary: true\n                },\n                {\n                    property: 'entity',\n                    dataIndex: 'entity',\n                    label: this.$tc('frosh-export.detail.firstName'),\n                    routerLink: 'frosh.export.detail',\n                    inlineEdit: 'string',\n                    allowResize: true,\n                    primary: true\n                }\n            ];\n        },\n\n        defaultCriteria() {\n            const criteria = new Criteria(this.page, this.limit);\n            criteria.setTerm(this.term);\n            return criteria;\n        },\n    },\n\n    methods: {\n        updateTotal({total}) {\n            this.total = total;\n        },\n\n        getList() {\n            this.isLoading = true;\n\n            return this.froshExportRepository.search(this.defaultCriteria, Shopware.Context.api).then((items) => {\n                this.total = items.total;\n                this.entities = items;\n                this.isLoading = false;\n\n                return items;\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        }\n    }\n});\n","import template from './frosh-export-detail.html.twig';\n\nconst {Component, Mixin} = Shopware;\nconst {Criteria} = Shopware.Data;\n\nComponent.register('frosh-export-detail', {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'froshExportService'\n    ],\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    metaInfo() {\n        return {\n            title: this.$createTitle()\n        };\n    },\n\n    data() {\n        return {\n            entity: null,\n            isLoading: false,\n            processSuccess: false,\n        };\n    },\n\n    computed: {\n        froshExportRepository() {\n            return this.repositoryFactory.create('frosh_export');\n        },\n\n        lastExecute() {\n            if (this.entity.lastExecute) {\n                console.log(this.entity.lastExecute);\n                console.log(format.date(this.entity.lastExecute));\n                return format.date(this.entity.lastExecute);\n            }\n\n            return '';\n        }\n    },\n\n    created() {\n        this.getEntity();\n    },\n\n    methods: {\n        getEntity() {\n            const criteria = new Criteria();\n\n            this.froshExportRepository\n                .get(this.$route.params.id, Shopware.Context.api, criteria)\n                .then((entity) => {\n                    this.entity = entity;\n                });\n        },\n\n        onCancel() {\n            this.$router.push({name: 'frosh.export.index'});\n        },\n\n        onClickSave() {\n            this.isLoading = true;\n\n            this.froshExportRepository\n                .save(this.entity, Shopware.Context.api)\n                .then(() => {\n                    this.getEntity();\n                    this.isLoading = false;\n                    this.processSuccess = true;\n                }).catch((exception) => {\n                this.isLoading = false;\n                this.createNotificationError({\n                    title: this.$tc('frosh-export.detail.errorTitle'),\n                    message: exception\n                });\n            });\n        },\n\n        saveFinish() {\n            this.processSuccess = false;\n        },\n\n        triggerExport() {\n            this.froshExportService.triggerExport(this.entity.id);\n        }\n    }\n});\n","import './page/frosh-export-create';\nimport './page/frosh-export-list';\nimport './page/frosh-export-detail';\n\nconst {Module} = Shopware;\n\nModule.register('frosh-export', {\n    type: 'plugin',\n    name: 'frosh-export.general.mainName',\n    title: 'frosh-export.general.mainMenuItemGeneral',\n    description: 'frosh-export.general.descriptionTextModule',\n    color: '#ff3d58',\n    icon: 'default-shopping-paper-bag-product',\n    entity: 'frosh_export',\n\n    routes: {\n        index: {\n            component: 'frosh-export-list',\n            path: 'list',\n            meta: {\n                privilege: 'frosh_export.viewer'\n            }\n        },\n        detail: {\n            component: 'frosh-export-detail',\n            path: 'detail/:id',\n            meta: {\n                parentPath: 'frosh.export.index',\n                privilege: 'frosh_export.viewer'\n            },\n            props: {\n                default(route) {\n                    return {\n                        froshExport: route.params.id\n                    };\n                }\n            }\n        },\n        create: {\n            component: 'frosh-export-create',\n            path: 'create',\n            meta: {\n                parentPath: 'frosh.export.index',\n                privilege: 'frosh_export.viewer'\n            }\n        }\n    },\n\n    navigation: [{\n        path: 'frosh.export.index',\n        privilege: 'frosh_export.viewer',\n        label: 'frosh-export.general.mainMenuItemGeneral',\n        id: 'frosh-export',\n        parent: 'sw-catalogue',\n        position: 90\n    }]\n});\n","const ApiService = Shopware.Classes.ApiService;\n\nexport default class FroshExportService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'sw') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = \"froshExportService\";\n    }\n\n    triggerExport(id, additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get(`/frosh/export/${id}/trigger`, {params, headers})\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n\n    }\n}\n","import './module/frosh-export';\nimport './module/frosh-export/page/frosh-export-detail';\nimport './module/frosh-export/page/frosh-export-list';\nimport './module/frosh-export/page/frosh-export-create';\n\nimport FroshExportService from './service/api/frosh.export.service';\n\nShopware.Application.addServiceProvider('froshExportService', () => {\n    const initContainer = Shopware.Application.getContainer('init');\n\n    return new FroshExportService(initContainer.httpClient, Shopware.Service('loginService'));\n});\n"],"sourceRoot":""}